// Script de test rapide pour le bouton admin
console.log('üîç Test du bouton admin en cours...');

// Attendre que la page soit charg√©e
document.addEventListener('DOMContentLoaded', function() {
    console.log('‚úÖ Page charg√©e, test du bouton admin...');
    
    // Chercher le bouton admin
    const adminButton = document.querySelector('.admin-access');
    
    if (adminButton) {
        console.log('‚úÖ Bouton admin trouv√© !');
        console.log('üìç Position:', adminButton.getBoundingClientRect());
        console.log('üé® Styles appliqu√©s:', window.getComputedStyle(adminButton));
        
        // V√©rifier que la fonction existe
        if (typeof showAdminAccess === 'function') {
            console.log('‚úÖ Fonction showAdminAccess() trouv√©e');
            
            // Tester le clic
            console.log('üß™ Test du clic sur le bouton...');
            adminButton.click();
            
        } else {
            console.error('‚ùå Fonction showAdminAccess() non trouv√©e !');
        }
        
    } else {
        console.error('‚ùå Bouton admin non trouv√© !');
        
        // Chercher tous les √©l√©ments avec la classe admin-access
        const allAdminElements = document.querySelectorAll('.admin-access');
        console.log('üîç √âl√©ments trouv√©s avec la classe admin-access:', allAdminElements.length);
        
        // Chercher dans le HTML
        const htmlContent = document.documentElement.innerHTML;
        if (htmlContent.includes('admin-access')) {
            console.log('‚úÖ Classe admin-access trouv√©e dans le HTML');
        } else {
            console.error('‚ùå Classe admin-access non trouv√©e dans le HTML');
        }
        
        if (htmlContent.includes('showAdminAccess')) {
            console.log('‚úÖ Fonction showAdminAccess trouv√©e dans le HTML');
        } else {
            console.error('‚ùå Fonction showAdminAccess non trouv√©e dans le HTML');
        }
    }
    
    // V√©rifier le CSS
    const styleSheets = document.styleSheets;
    console.log('üìö Feuilles de style charg√©es:', styleSheets.length);
    
    // Chercher les r√®gles CSS pour admin-access
    let adminAccessRules = [];
    for (let i = 0; i < styleSheets.length; i++) {
        try {
            const rules = styleSheets[i].cssRules || styleSheets[i].rules;
            if (rules) {
                for (let j = 0; j < rules.length; j++) {
                    if (rules[j].selectorText && rules[j].selectorText.includes('admin-access')) {
                        adminAccessRules.push(rules[j]);
                    }
                }
            }
        } catch (e) {
            console.log('‚ö†Ô∏è Impossible d\'acc√©der aux r√®gles CSS de la feuille', i);
        }
    }
    
    if (adminAccessRules.length > 0) {
        console.log('‚úÖ R√®gles CSS trouv√©es pour admin-access:', adminAccessRules.length);
        adminAccessRules.forEach((rule, index) => {
            console.log(`   R√®gle ${index + 1}:`, rule.selectorText, rule.cssText);
        });
    } else {
        console.error('‚ùå Aucune r√®gle CSS trouv√©e pour admin-access');
    }
});

// Fonction de test manuel
function testAdminButton() {
    console.log('üß™ Test manuel du bouton admin...');
    
    const adminButton = document.querySelector('.admin-access');
    if (adminButton) {
        console.log('‚úÖ Bouton trouv√©, test du clic...');
        adminButton.click();
    } else {
        console.error('‚ùå Bouton non trouv√©');
    }
}

// Fonction de test de la fonction
function testShowAdminFunction() {
    console.log('üß™ Test de la fonction showAdminAccess...');
    
    if (typeof showAdminAccess === 'function') {
        console.log('‚úÖ Fonction trouv√©e, test d\'appel...');
        try {
            showAdminAccess();
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'appel:', error);
        }
    } else {
        console.error('‚ùå Fonction showAdminAccess non trouv√©e');
    }
}

// Ajouter les fonctions de test √† la console
console.log('üîß Fonctions de test disponibles:');
console.log('   testAdminButton() - Test du bouton');
console.log('   testShowAdminFunction() - Test de la fonction');
console.log('   showAdminAccess() - Appel direct de la fonction');

console.log('üìã Instructions de test:');
console.log('1. Ouvrez la console du navigateur (F12)');
console.log('2. Regardez les messages ci-dessus');
console.log('3. Utilisez les fonctions de test si n√©cessaire');
console.log('4. V√©rifiez que le petit rond est visible et cliquable');
